name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches: [ main ]

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate Prisma Client
      run: npx prisma generate

    - name: Build for production
      run: npm run build
      env:
        # Production build with mock vars for validation
        DATABASE_URL: "postgresql://user:pass@localhost:5432/prod"
        NEXT_PUBLIC_SUPABASE_URL: "https://prod.supabase.co"
        NEXT_PUBLIC_SUPABASE_ANON_KEY: "prod-anon-key"
        SUPABASE_SERVICE_ROLE_KEY: "prod-service-role-key"
        NEXT_PUBLIC_APP_URL: "https://qr-generator.vercel.app"

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      if: success()
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./

    - name: Create deployment status
      uses: actions/github-script@v7
      if: success()
      with:
        script: |
          github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.sha,
            state: 'success',
            target_url: 'https://qr-generator.vercel.app',
            description: 'Deployment successful',
            context: 'vercel/deployment'
          })

    - name: Notify on failure
      uses: actions/github-script@v7
      if: failure()
      with:
        script: |
          github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.sha,
            state: 'failure',
            description: 'Deployment failed',
            context: 'vercel/deployment'
          })